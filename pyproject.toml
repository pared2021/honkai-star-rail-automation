[tool.black]
# 行长度
line-length = 88

# Python版本
target-version = ['py38', 'py39', 'py310', 'py311']

# 包含的文件扩展名
include = '\.pyi?$'

# 排除的文件和目录
exclude = '''
/(
  (
      \.eggs
    | \.git
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | venv
    | env
    | \.env
    | __pycache__
    | \.pytest_cache
    | migrations
  )/
)
'''

# 强制排除
force-exclude = '''
/(
  migrations
  | \.git
  | \.venv
  | venv
  | build
  | dist
)/
'''

# 预览模式（启用实验性功能）
preview = false

# 跳过字符串标准化
skip-string-normalization = false

# 跳过魔术尾随逗号
skip-magic-trailing-comma = false



[tool.isort]
# 配置isort与black兼容
profile = "black"

# 行长度
line_length = 88

# 多行输出模式
multi_line_output = 3

# 包含尾随逗号
include_trailing_comma = true

# 强制网格包装
force_grid_wrap = 0

# 使用括号
use_parentheses = true

# 确保换行符分隔
ensure_newline_before_comments = true

# 已知的第一方库
known_first_party = ["src"]

# 已知的第三方库
known_third_party = [
    "PyQt6",
    "cv2",
    "numpy",
    "PIL",
    "win32gui",
    "win32con",
    "win32api",
    "psutil",
    "aiosqlite",
    "pytest",
    "asyncio"
]

# 导入部分
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]

# 默认部分
default_section = "THIRDPARTY"

# 跳过的文件
skip = [
    ".git",
    "__pycache__",
    ".venv",
    "venv",
    "env",
    ".env",
    "build",
    "dist",
    "*.egg-info",
    ".tox",
    ".coverage",
    ".pytest_cache",
    "migrations"
]

# 跳略的glob模式
skip_glob = ["**/migrations/*"]

# 过滤文件
filter_files = true

# 强制单行导入
force_single_line = false

# 强制排序在__future__导入内
force_sort_within_sections = true

# 词汇排序
lexicographical = false

# 组合as导入
combine_as_imports = true

# 组合星号导入
combine_star = false

# 显示差异 - 注释掉不支持的配置
# show_diff = false

# 静默模式
quiet = false

# 详细模式
verbose = false

# 颜色输出
color_output = true

[tool.pytest.ini_options]
# 测试目录
testpaths = ["tests"]

# Python文件模式
python_files = ["test_*.py", "*_test.py"]

# Python类模式
python_classes = ["Test*"]

# Python函数模式
python_functions = ["test_*"]

# 添加选项
addopts = """
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --cov=src
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml
    --cov-fail-under=80
    --no-cov-on-fail
"""

# 最小版本
minversion = "6.0"

# 标记
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "gui: marks tests as GUI tests",
    "async: marks tests as async tests"
]

# 过滤警告
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning"
]

# 异步模式
asyncio_mode = "auto"

[tool.coverage.run]
# 源代码目录
source = ["src"]

# 排除的文件
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/migrations/*",
    "*/venv/*",
    "*/.venv/*",
    "*/env/*",
    "*/.env/*",
    "setup.py",
    "conftest.py"
]

# 分支覆盖
branch = true

# 并行模式
parallel = true

# 数据文件
data_file = ".coverage"

[tool.coverage.report]
# 排除行
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod"
]

# 忽略错误
ignore_errors = true

# 显示缺失行
show_missing = true

# 跳过覆盖的文件
skip_covered = false

# 跳过空文件
skip_empty = false

# 精度
precision = 2

# 排序
sort = "Cover"

[tool.mypy]
# Python版本
python_version = "3.9"

# 警告设置
warn_return_any = true
warn_unused_configs = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true

# 错误设置
disallow_untyped_defs = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
disallow_any_generics = true
disallow_subclassing_any = true

# 严格设置
strict_optional = true
strict_equality = true

# 输出设置
show_error_codes = true
show_column_numbers = true
show_error_context = true
pretty = true
color_output = true
error_summary = true

# 缓存设置
cache_dir = ".mypy_cache"
incremental = true

# 跟踪导入
follow_imports = "normal"

# 命名空间包
namespace_packages = true

# 隐式重新导出
implicit_reexport = false

# 检查未类型化的定义
check_untyped_defs = true

# 允许重新定义
allow_redefinition = false

# 本地部分类型
local_partial_types = false

# 排除的文件和目录
exclude = [
    "build/",
    "dist/",
    "venv/",
    ".venv/",
    "env/",
    ".env/",
    "__pycache__/",
    ".git/",
    ".tox/",
    ".pytest_cache/",
    "migrations/",
    "tests/"
]

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
disallow_incomplete_defs = false

[[tool.mypy.overrides]]
module = [
    "PyQt6.*",
    "cv2.*",
    "PIL.*",
    "win32gui.*",
    "win32con.*",
    "win32api.*",
    "psutil.*",
    "aiosqlite.*"
]
ignore_missing_imports = true

[tool.coverage.html]
# HTML报告目录
directory = "htmlcov"

# 标题
title = "Xingtie Code Coverage Report"

[tool.coverage.xml]
# XML报告文件
output = "coverage.xml"