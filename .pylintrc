[MASTER]
# 使用多进程加速检查
jobs=0

# 加载的插件
load-plugins=

# 忽略的文件和目录
ignore=CVS,.git,__pycache__,.venv,venv,env,.env,build,dist,*.egg-info,.tox,.coverage,.pytest_cache,migrations

# 忽略的文件模式
ignore-patterns=

# Python代码的最小版本
py-version=3.8

[MESSAGES CONTROL]
# 禁用的检查
disable=
    # 格式相关（由black处理）
    C0103,  # invalid-name
    C0111,  # missing-docstring
    C0301,  # line-too-long
    C0326,  # bad-whitespace
    
    # 导入相关（由isort处理）
    C0411,  # wrong-import-order
    C0412,  # ungrouped-imports
    
    # 过于严格的检查
    R0903,  # too-few-public-methods
    R0913,  # too-many-arguments
    W0613,  # unused-argument
    W0622,  # redefined-builtin
    
    # 与类型检查冲突
    E1101,  # no-member
    
    # 测试相关
    W0212,  # protected-access
    
    # 日志相关
    W1203,  # logging-fstring-interpolation

[REPORTS]
# 输出格式
output-format=text

# 报告
reports=no

# 评分
score=yes

[REFACTORING]
# 最大参数数量
max-args=7

# 最大属性数量
max-attributes=10

# 最大分支数量
max-branches=15

# 最大局部变量数量
max-locals=20

# 最大返回语句数量
max-returns=8

# 最大语句数量
max-statements=60

# 最小公共方法数量
min-public-methods=1

[SIMILARITIES]
# 重复代码检查的最小行数
min-similarity-lines=6

# 忽略注释
ignore-comments=yes

# 忽略文档字符串
ignore-docstrings=yes

# 忽略导入
ignore-imports=no

[SPELLING]
# 拼写检查字典
spelling-dict=

# 私有字典文件
spelling-private-dict-file=

# 拼写检查存储文件
spelling-store-unknown-words=no

[TYPECHECK]
# 忽略的模块
ignored-modules=

# 忽略的类
ignored-classes=optparse.Values,thread._local,_thread._local

# 生成的成员
generated-members=

[VARIABLES]
# 允许重新定义的内置函数
redefining-builtins-modules=six.moves,past.builtins,future.builtins,builtins,io

[FORMAT]
# 最大行长度
max-line-length=88

# 最大模块行数
max-module-lines=1000

# 单行if语句
single-line-if-stmt=no

[LOGGING]
# 日志模块
logging-modules=logging

[MISCELLANEOUS]
# 注释中的标记
notes=FIXME,XXX,TODO

[BASIC]
# 好的变量名
good-names=i,j,k,ex,Run,_,id,pk

# 坏的变量名
bad-names=foo,bar,baz,toto,tutu,tata

# 包含名称提示的正则表达式
include-naming-hint=no

# 变量命名风格
variable-rgx=[a-z_][a-z0-9_]{2,30}$

# 常量命名风格
const-rgx=(([A-Z_][A-Z0-9_]*)|(__.*__))$

# 类命名风格
class-rgx=[A-Z_][a-zA-Z0-9]+$

# 函数命名风格
function-rgx=[a-z_][a-z0-9_]{2,30}$

# 方法命名风格
method-rgx=[a-z_][a-z0-9_]{2,30}$

# 模块命名风格
module-rgx=(([a-z_][a-z0-9_]*)|([A-Z][a-zA-Z0-9]+))$

# 属性命名风格
attr-rgx=[a-z_][a-z0-9_]{2,30}$

# 参数命名风格
argument-rgx=[a-z_][a-z0-9_]{2,30}$

# 类属性命名风格
class-attribute-rgx=([A-Za-z_][A-Za-z0-9_]{2,30}|(__.*__))$

# 内联变量命名风格
inlinevar-rgx=[A-Za-z_][A-Za-z0-9_]*$

[DESIGN]
# 最大参数数量
max-args=7

# 最大局部变量数量
max-locals=20

# 最大返回语句数量
max-returns=8

# 最大分支数量
max-branches=15

# 最大语句数量
max-statements=60

# 最大父类数量
max-parents=7

# 最大属性数量
max-attributes=10

# 最小公共方法数量
min-public-methods=1

# 最大公共方法数量
max-public-methods=25

[CLASSES]
# 有效的类装饰器
valid-classmethod-first-arg=cls

# 有效的元类
valid-metaclass=type

[IMPORTS]
# 废弃的模块
deprecated-modules=optparse,tkinter.tix

# 导入图形
import-graph=

# 外部导入图形
ext-import-graph=

# 内部导入图形
int-import-graph=

[EXCEPTIONS]
# 可以捕获的异常
overgeneral-exceptions=builtins.Exception